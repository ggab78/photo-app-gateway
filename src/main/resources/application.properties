spring.application.name=gateway
server.port=8082

#enables automatic mapping of routes
#It uses service name in request url example http://localhost:8082/USERS-SERVICE/users/status/check
#spring.cloud.gateway.discovery.locator.enabled=true
#now it will work with lower case http://localhost:8082/users-service/users/status/check
#spring.cloud.gateway.discovery.locator.lower-case-service-id=true



#manual mapping
# works without app name http://localhost:8082/users/status/check
spring.cloud.gateway.routes[0].id=users-status-check
spring.cloud.gateway.routes[0].uri=lb://users-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/some/users/status/check
spring.cloud.gateway.routes[0].predicates[1]=Method=GET
#checks if there is bearer token in the header
spring.cloud.gateway.routes[0].predicates[2]=Header=Authorization, Bearer (.*)
spring.cloud.gateway.routes[0].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[0].filters[1]=RewritePath=/some/users/status/check, /users/status/check
#below is the custom filter that is created. AuthorizationHeaderFilter is a class name
spring.cloud.gateway.routes[0].filters[2]=AuthorizationHeaderFilter


spring.cloud.gateway.routes[1].id=users
spring.cloud.gateway.routes[1].uri=lb://users-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/some/users
spring.cloud.gateway.routes[1].predicates[1]=Method=POST
spring.cloud.gateway.routes[1].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[1].filters[1]=RewritePath=/some/users, /users


spring.cloud.gateway.routes[2].id=users-login
spring.cloud.gateway.routes[2].uri=lb://users-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/some/users/login
spring.cloud.gateway.routes[2].predicates[1]=Method=POST
spring.cloud.gateway.routes[2].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[2].filters[1]=RewritePath=/some/users/login, /users/login


spring.cloud.gateway.routes[3].id=users-get-update-delete
spring.cloud.gateway.routes[3].uri=lb://users-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/some/users/**
spring.cloud.gateway.routes[3].predicates[1]=Method=PUT,GET,DELETE
spring.cloud.gateway.routes[3].predicates[2]=Header=Authorization, Bearer (.*)
spring.cloud.gateway.routes[3].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[3].filters[1]=RewritePath=/some/users/(?<segment>/?.*), /users/$\\{segment}
spring.cloud.gateway.routes[3].filters[2]=AuthorizationHeaderFilter

spring.cloud.gateway.routes[4].id=users-actuator
spring.cloud.gateway.routes[4].uri=lb://users-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/users-service/actuator/**
spring.cloud.gateway.routes[4].predicates[1]=Method=GET
spring.cloud.gateway.routes[4].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[4].filters[1]=RewritePath=/users-service/actuator/(?<segment>/?.*), /actuator/$\\{segment}

spring.rabbitmq.host=localhost
spring.rabbitmq.port=8013
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

#https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-features.html
management.endpoints.web.exposure.include=beans,health,routes,httptrace,info
#management.endpoints.web.exposure.exclude=